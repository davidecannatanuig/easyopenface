% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_mutate_select_tidy.R
\name{transformations}
\alias{transformations}
\alias{mutate_faces}
\alias{transform_faces}
\title{Mutating and transforming faces objects.}
\usage{
mutate_faces(faces, ...)

transform_faces(faces, var, fun)
}
\arguments{
\item{faces}{A "faces" object.}

\item{...}{only in mutate_faces. Pairs of expression inluding a name and the formula for caluclating the value.}

\item{var}{The name, as a string, of the new variable created (transform_faces).}

\item{fun}{The name of the function to use (transform_faces)}
}
\description{
Mutate_faces and transfrom_faces are metafunctions that allow to create new variables in all the dataframes of a face object.
Mutate_faces adds a new variables by writing their name and a formula (see examples).
It is the openfacer equivalent of dplyr::mutate.
Transform_faces use functions that take as input a whole face dataframe.
}
\examples{

#Create a "smiles" variable
#' mutate_faces(test_faces, smile = ifelse(AU06_c == 1 & AU12_c == 1, 1, 0))

#Create a mei variable, select it and summarise
test_faces \%>\%
transform_faces("mei", mei) \%>\%
select_faces(mei) \%>\%
tidy_face()

}
